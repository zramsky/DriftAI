version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: contract-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: contract_reconciliation
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - contract-network

  redis:
    image: redis:7-alpine
    container_name: contract-redis
    ports:
      - "6379:6379"
    networks:
      - contract-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: contract-backend
    ports:
      - "3001:3001"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: contract_reconciliation
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NODE_ENV: development
      PORT: 3001
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - contract-network
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: contract-frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - contract-network
    command: npm run dev

networks:
  contract-network:
    driver: bridge

volumes:
  postgres_data: